LIB "zeroset.lib";
proc norm_form(poly f, ideal fs){
  // output
  poly r = 0;
  list a;

  // init
  poly p = f;
  int s = ncols(fs);
  int i;
  for(i=1;i<=s;i++){
    a[i] = 0;
  }

  int divided = 0; // divisionoccured

  while(p != 0){
    i = 1;
    divided = 0;

    while(i <= s && divided == 0){
      if(reduce(lead(p),lead(fs[i])) == 0){
        a[i] = a[i] + lead(p)/lead(fs[i]);
        p = p - (lead(p)/lead(fs[i]))*fs[i];
        divided = 1;
      }else{
        i = i + 1;
      }
    }

    if (divided == 0){
      r = r + lead(p);
      p = p - lead(p);
    }

  }
  return (r);
}

proc lead_lcm(poly f, poly g){

  intvec f_muldeg = leadexp(f);
  intvec g_muldeg = leadexp(g);
  int i;
  intvec gamma;
  for(i=1;i<=size(f_muldeg);i++){
    gamma[i] = max(f_muldeg[i],g_muldeg[i]);
  }
  return (monomial(gamma));
}


proc s_poly(poly f, poly g)
{
  poly l = lead_lcm(f,g);
  poly lf = lead(f);
  poly lg = lead(g);
  return ((l/lf)*f - (l/lg)*g);
}

proc criterion(intvec pair, ideal g, list B){
  int k;
  for (k=1;k<=ncols(g);k++){
    if ( !(containedQ(B,intvec(pair[1],k)) || containedQ(B,intvec(k,pair[1]))) &&
    !(containedQ(B,intvec(pair[2],k)) || containedQ(B,intvec(k,pair[2]))) &&
     reduce(lead_lcm(g[pair[1]],g[pair[2]]),lead(g[k])) == 0){
      return (1);
    }
  }
  return (0);
}


proc ext_buchberger(ideal f){
  // init
  ideal g = f;
  list B;
  int i,j;
  // queueのtail ポインタ
  int tail = 1;
  for (i=1;i<ncols(g);i++){
    for (j=i+1;j<=ncols(g);j++){
      B[tail] = intvec(i,j);
      tail++;
    }
  }
  int t = ncols(g);
  // 今扱っているIndexペア
  intvec pair;
  poly S;
  // tailが1に戻るまで
  while(tail-1 != 0){
    pair = B[1];
    if (lead_lcm(g[pair[1]],g[pair[2]])!= leadmonom(g[pair[1]])*leadmonom(g[pair[2]]) && !criterion(pair,g,B)){
      S = norm_form(s_poly(g[pair[1]],g[pair[2]]),g);
      if (S != 0){
        t = t+1;
        g = g+S;
        for (i=1;i<t;i++){
          B[tail] = intvec(i,t);
          tail++;
        }
      }
    }
    B = delete(B,1);
    tail--;
  }
  return (g);
}
